{"version":3,"file":"static/js/500.93d36279.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/phonebook/phonebook-selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","export const selectItems = state => state.contacts.contacts.items;\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.contacts.filter;\n","import React from 'react';\nimport { useState } from 'react';\n\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/phonebook/phonebook-operations';\nimport { selectItems } from 'redux/phonebook/phonebook-selectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectItems);\n\n  const fields = {\n    name: setName,\n    number: setNumber,\n  };\n\n  const handleInputChange = evt => {\n    const { name } = evt.target;\n    fields[name](prev => (prev = evt.target.value));\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (contacts.some(contact => contact.name.includes(name))) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact({ name, number }));\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label className={css.label} htmlFor=\"name\">\n        Name\n      </label>\n      <input\n        placeholder=\"Jack Daniels\"\n        onChange={handleInputChange}\n        className={css.input}\n        type=\"text\"\n        value={name}\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label className={css.label} htmlFor=\"number\">\n        Number\n      </label>\n      <input\n        onChange={handleInputChange}\n        placeholder=\"230-23-23\"\n        className={css.input}\n        type=\"tel\"\n        value={number}\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"item\":\"ContactList_item__EZYHO\",\"number\":\"ContactList_number__2af8f\",\"name\":\"ContactList_name__UCkFW\",\"button\":\"ContactList_button__7kL4l\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport css from './ContactList.module.css';\n\nimport { useEffect } from 'react';\nimport {\n  fetchContacts,\n  removeContacts,\n} from 'redux/phonebook/phonebook-operations';\nimport {\n  selectContacts,\n  selectFilter,\n  selectItems,\n} from 'redux/phonebook/phonebook-selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const filtered = useSelector(selectFilter);\n  const { isLoading, error } = useSelector(selectContacts);\n  const items = useSelector(selectItems);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleRemoveContact = evt => {\n    dispatch(removeContacts(evt.target.id));\n  };\n\n  return (\n    <>\n      {isLoading && <p className={css.name}>Loading contacts...</p>}\n      {error && <p className={css.number}>{error}</p>}\n      <ul className={css.contactList}>\n        {items?.length > 0 &&\n          items\n            .filter(contact =>\n              contact?.name.toLowerCase().includes(filtered?.toLowerCase())\n            )\n            .map(contact => {\n              return (\n                <li className={css.item} key={contact.id}>\n                  <span className={css.name}>{contact.name}: </span>\n                  <a className={css.number} href={`tel:${contact.number}`}>\n                    {contact.number}\n                  </a>\n                  <button\n                    onClick={handleRemoveContact}\n                    id={contact.id}\n                    className={css.button}\n                    type=\"button\"\n                  >\n                    Delete\n                  </button>\n                </li>\n              );\n            })}\n      </ul>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"title\":\"Filter_title__pSkfx\"};","import React from 'react';\nimport css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/phonebook/phonebook-slice';\nimport { selectFilter } from 'redux/phonebook/phonebook-selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = evt => {\n    dispatch(filterContact(evt.target.value));\n  };\n\n  return (\n    <>\n      <h3 className={css.title}>Contact search</h3>\n      <input\n        onChange={handleFilter}\n        className={css.input}\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n      />\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactsPage_wrapper__HYOyv\",\"title\":\"ContactsPage_title__P3MkR\",\"main\":\"ContactsPage_main__rIWJn\",\"subtitle\":\"ContactsPage_subtitle__jdL5x\"};","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport css from './ContactsPage.module.css';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <main className={css.main}>\n        <h1 className={css.title}>Phonebook</h1>\n        <div className={css.wrapper}>\n          <div>\n            <h2 className={css.subtitle}>Add new contact</h2>\n            <ContactForm />\n            <Filter />\n          </div>\n          <div>\n            <h2 className={css.subtitle}>Contacts</h2>\n            <ContactList />\n          </div>\n        </div>\n      </main>\n    </>\n  );\n};\nexport default ContactsPage;\n"],"names":["selectItems","state","contacts","items","selectContacts","selectFilter","filter","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","fields","handleInputChange","evt","target","prev","value","onSubmit","preventDefault","some","contact","includes","alert","addContact","className","css","htmlFor","placeholder","onChange","type","pattern","title","required","ContactList","filtered","isLoading","error","useEffect","fetchContacts","handleRemoveContact","removeContacts","id","length","toLowerCase","map","href","onClick","Filter","filterContact"],"sourceRoot":""}